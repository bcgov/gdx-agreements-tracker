import{_ as l,r as i,o,c as d,b as e,d as n,e as t,a as s}from"./app-rA2xiQQ_.js";const r={},c=s('<h1 id="deploying-using-node-and-docker" tabindex="-1"><a class="header-anchor" href="#deploying-using-node-and-docker"><span>Deploying Using Node and Docker</span></a></h1><h2 id="prerequisite" tabindex="-1"><a class="header-anchor" href="#prerequisite"><span>Prerequisite</span></a></h2><p>All development setup is done with a Mac OS</p><ul><li>Requirements: <ul><li>Node (V18)</li><li>Docker (Desktop, Ranger, Colima)</li><li>PGAdmin (not required but helpful)</li></ul></li></ul><p>Install brew if not already installed.</p><ul><li>Install mkcert tool for creating certificates <code>brew install mkcert</code></li><li>Only if using <strong>Firefox</strong>, Install nss<code>brew install nss</code></li><li>Create a self signed Certificate Authority <code>mkcert -install</code></li></ul><h2 id="setup-local-repository-and-certs" tabindex="-1"><a class="header-anchor" href="#setup-local-repository-and-certs"><span>Setup Local Repository and certs</span></a></h2><h3 id="download-source-code" tabindex="-1"><a class="header-anchor" href="#download-source-code"><span>Download Source Code</span></a></h3><p><code>git clone https://github.com/bcgov/gdx-agreements-tracker.git</code></p><h3 id="setup-certificates" tabindex="-1"><a class="header-anchor" href="#setup-certificates"><span>Setup Certificates</span></a></h3><p><strong>All bash commands are assumed from root of repository</strong> <code>./gdx-agreements-tracker</code> A self signed certificate is required for local development deployments.</p><ul><li>in a terminal window go to the GDX agreements tracker repository <code>cd gdx-agreements-tracker</code></li><li>create a <code>.cert</code> directory in the frontend folder if not already created <code>mkdir -p ./frontend/.cert</code><ul><li>This is where your certificates will be saved.</li><li>This folder is also excluded from the repository via the .gitignore file.</li></ul></li><li>create a key and cert file <code>mkcert -key-file ./frontend/.cert/key.pem -cert-file ./frontend/.cert/cert.pem &quot;localhost&quot;</code></li></ul><h2 id="set-up-and-deploy-database" tabindex="-1"><a class="header-anchor" href="#set-up-and-deploy-database"><span>Set up and Deploy Database</span></a></h2><p>The database is a postgres database, which needs to be deployed via docker compose.</p>',14),p=e("code",null,"./backend/.env",-1),u={href:"https://github.com/bcgov/gdx-agreements-tracker/blob/development/backend/sample.env",target:"_blank",rel:"noopener noreferrer"},v=e("li",null,"Update/add all database environment variables",-1),m=s(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#/backend/.env</span>
<span class="token punctuation">..</span>.
<span class="token assign-left variable">DATABASE_AUTO_DEPLOY</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">POSTGRES_DB</span><span class="token operator">=</span>gat_db
<span class="token assign-left variable">POSTGRES_HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span>postgres
<span class="token assign-left variable">POSTGRES_PORT</span><span class="token operator">=</span><span class="token number">15432</span>
<span class="token assign-left variable">POSTGRES_USER</span><span class="token operator">=</span>postgres
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Start the database by running the docker compose command:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ./backend
<span class="token function">docker</span> volume create gdx-agreements-tracker_database <span class="token comment"># set up a volume to hold the database</span>
<span class="token function">docker</span> compose up <span class="token parameter variable">--build</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>If the --build step fails you can manually build the image:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token function">docker</span> build <span class="token parameter variable">-t</span> backend-db ./openshift/templates/images/postgres/
 <span class="token function">docker</span> compose up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="set-up-back-end-api" tabindex="-1"><a class="header-anchor" href="#set-up-back-end-api"><span>Set up Back-End API</span></a></h2>`,6),b=e("a",{href:"#set-up-and-deploy-database"},"Set Up and Deploy Database",-1),h=e("code",null,"./backend/.env",-1),k=e("em",null,"(see example below)",-1),g={href:"https://github.com/bcgov/gdx-agreements-tracker/blob/development/backend/sample.env",target:"_blank",rel:"noopener noreferrer"},f=s(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Refer here for configs: https://console.apps.silver.devops.gov.bc.ca/k8s/ns/acd38d-dev/configmaps/0-gdx-agreements-tracker-api-env-config/yaml</span>
<span class="token comment"># Refer here for secrets: https://console.apps.silver.devops.gov.bc.ca/k8s/ns/acd38d-dev/secrets/pmo-secrets-7f57hmd56g/yaml</span>

<span class="token comment"># JSON Web Key Set Universal Resource Identifier</span>
<span class="token assign-left variable">JWKSURI</span><span class="token operator">=</span>
<span class="token comment"># Node environment</span>
<span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>development
<span class="token comment"># Database Config</span>
<span class="token assign-left variable">DATABASE_AUTO_DEPLOY</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">POSTGRES_DATABASE</span><span class="token operator">=</span>gat_db
<span class="token assign-left variable">POSTGRES_HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span>postgres
<span class="token assign-left variable">POSTGRES_PORT</span><span class="token operator">=</span><span class="token number">15432</span>
<span class="token assign-left variable">POSTGRES_USER</span><span class="token operator">=</span>postgres
<span class="token comment"># Common Component Token host/path used for CHES and CDOGS</span>
<span class="token assign-left variable">COMMON_COMPONENT_TOKEN_HOST</span><span class="token operator">=</span>
<span class="token assign-left variable">COMMON_COMPONENT_TOKEN_PATH</span><span class="token operator">=</span>
<span class="token comment"># Common Hosted Documentation Generation API</span>
<span class="token assign-left variable">CDOGS_CLIENT_ID</span><span class="token operator">=</span>
<span class="token assign-left variable">CDOGS_SECRET</span><span class="token operator">=</span>
<span class="token assign-left variable">COMMON_COMPONENT_CDOGS_API</span><span class="token operator">=</span>
<span class="token comment"># Common Hosted Email Sending API</span>
<span class="token assign-left variable">CHES_CLIENT_ID</span><span class="token operator">=</span>
<span class="token assign-left variable">CHES_SECRET</span><span class="token operator">=</span>
<span class="token assign-left variable">COMMON_COMPONENT_CHES_API</span><span class="token operator">=</span>
<span class="token comment"># Single Sign-on API</span>
<span class="token assign-left variable">SINGLE_SIGN_ON_API</span><span class="token operator">=</span>
<span class="token assign-left variable">SINGLE_SIGN_ON_API_CLIENT_ID</span><span class="token operator">=</span>
<span class="token assign-left variable">SINGLE_SIGN_ON_API_TOKEN_HOST</span><span class="token operator">=</span>
<span class="token assign-left variable">SINGLE_SIGN_ON_API_TOKEN_PATH</span><span class="token operator">=</span>
<span class="token assign-left variable">SINGLE_SIGN_ON_CLIENT_SECRET</span><span class="token operator">=</span>
<span class="token assign-left variable">SINGLE_SIGN_ON_ENVIRONMENT</span><span class="token operator">=</span>
<span class="token assign-left variable">SINGLE_SIGN_ON_INTEGRATION_ID</span><span class="token operator">=</span>
<span class="token comment"># Deprecated</span>
<span class="token assign-left variable">COMMON_COMPONENT_CLIENT_ID</span><span class="token operator">=</span>
<span class="token assign-left variable">COMMON_COMPONENT_SECRET</span><span class="token operator">=</span>
<span class="token assign-left variable">COMMON_COMPONENT_URL</span><span class="token operator">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="seed-the-production-database-and-do-migrations" tabindex="-1"><a class="header-anchor" href="#seed-the-production-database-and-do-migrations"><span>Seed the production database and do migrations</span></a></h3>`,2),_=e("code",null,"./backend/src/database/production_seeds",-1),S={href:"https://apps.itsm.gov.bc.ca/bitbucket/projects/DES/repos/pmo-mssql-converter/browse/README.md?useDefaultHandler=true#50",target:"_blank",rel:"noopener noreferrer"},y=e("ul",null,[e("li",null,[e("strong",null,"DO NOT COPY THE MIGRATIONS from the pmo-mssql-converter"),n("! "),e("ul",null,[e("li",null,[n("those migrations will conflict with the picker options from the "),e("code",null,"08_picker_options.js"),n(" seeder!")])])])],-1),E=e("li",null,[n("To perform the migration and seeding on your local database from the "),e("strong",null,"gdx-agreements-tracker"),n(" directory:")],-1),O=s(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ./backend
npx knex migrate:latest
npx knex seed:run <span class="token parameter variable">--specific</span><span class="token operator">=</span>999_production_seeder.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-up-pgadmin-to-view-and-make-queries" tabindex="-1"><a class="header-anchor" href="#set-up-pgadmin-to-view-and-make-queries"><span>Set up PGAdmin to view and make queries</span></a></h3><ul><li>You can generate a config file for pgAdmin with the following command:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span> pgAdminConfig.JSON</span>
{
    &quot;Servers&quot;: {
        &quot;1&quot;: {
            &quot;Name&quot;: &quot;GDX Agreements Tracker&quot;,
            &quot;Group&quot;: &quot;Servers&quot;,
            &quot;Host&quot;: &quot;localhost&quot;,
            &quot;Port&quot;: 15432,
            &quot;MaintenanceDB&quot;: &quot;postgres&quot;,
            &quot;Username&quot;: &quot;postgres&quot;,
            &quot;UseSSHTunnel&quot;: 0,
            &quot;TunnelPort&quot;: &quot;22&quot;,
            &quot;TunnelAuthentication&quot;: 0,
            &quot;KerberosAuthentication&quot;: false,
            &quot;ConnectionParameters&quot;: {
                &quot;sslmode&quot;: &quot;prefer&quot;,
                &quot;connect_timeout&quot;: 10
            }
        }
    }
}
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>To use this file, simply open PGAdmin, click tools &gt; Import / Export Servers &gt; Import, select your pgAdminConfig.JSON file, and import it by following the prompts.</p></blockquote><blockquote><p>If you want to configure PGAdmin without a JSON file, simply use the interface to create a new server using the database values from the JSON snippet above, or from <strong>./backend/.env</strong>.</p></blockquote><h3 id="run-the-backend-api" tabindex="-1"><a class="header-anchor" href="#run-the-backend-api"><span>Run the Backend API</span></a></h3><ul><li>check which version of Node you should be using.</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token builtin class-name">cd</span> ./backend
 <span class="token function">cat</span> package.json <span class="token operator">|</span> <span class="token function">less</span>
 <span class="token comment"># your version should look like this:</span>
<span class="token punctuation">..</span>.
  <span class="token string">&quot;engineStrict&quot;</span><span class="token builtin class-name">:</span> true,
  <span class="token string">&quot;engines&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;node&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&gt;=18.18.0&quot;</span>
  <span class="token punctuation">}</span>,
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Switch to the correct (currently: v18.18.0) Node version:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ./backend
nvm list <span class="token comment"># find out what versions are available for you</span>
nvm <span class="token function">install</span>  v18.18.0 <span class="token comment"># install matching version from package.json</span>
nvm use v18.18.0 <span class="token comment"># switch to that version</span>
nvm <span class="token builtin class-name">alias</span> default v18.18.0 <span class="token comment"># Optional: set the default version</span>
<span class="token function">npm</span> i <span class="token comment"># installs dependencies</span>
<span class="token function">npm</span> run start <span class="token comment"># runs the backend API</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><hr><h2 id="frontend-setup-and-deploy" tabindex="-1"><a class="header-anchor" href="#frontend-setup-and-deploy"><span>Frontend Setup and Deploy</span></a></h2><h3 id="set-up-frontend-app" tabindex="-1"><a class="header-anchor" href="#set-up-frontend-app"><span>Set up Frontend App</span></a></h3>`,15),A=e("li",null,[n("Create"),e("code",null,"./frontend/.env"),n(" using the example below as a template:")],-1),q=e("code",null,"REACT_APP_KEYCLOAK_URL",-1),N=e("code",null,"REACT_APP_KEYCLOAK_CLIENT_ID",-1),P=e("code",null,"REACT_APP_KEYCLOAK_REALM",-1),T={href:"https://console.apps.silver.devops.gov.bc.ca/k8s/ns/acd38d-dev/deployments/pmo-app-deployment/yaml",target:"_blank",rel:"noopener noreferrer"},C=s(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># frontend .env</span>
<span class="token assign-left variable">WDS_SOCKET_PORT</span><span class="token operator">=</span><span class="token number">3000</span>
<span class="token assign-left variable">REACT_APP_API_URL</span><span class="token operator">=</span><span class="token string">&quot;https://localhost:8080/&quot;</span>
<span class="token assign-left variable">REACT_APP_KEYCLOAK_CLIENT_ID</span><span class="token operator">=</span><span class="token comment"># see note above for value</span>
<span class="token assign-left variable">REACT_APP_KEYCLOAK_REALM</span><span class="token operator">=</span>standard
<span class="token assign-left variable">REACT_APP_KEYCLOAK_URL</span><span class="token operator">=</span><span class="token comment"># see note above for value</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>check which version of Node you should be using.</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token builtin class-name">cd</span> ./frontend
 <span class="token function">cat</span> package.json <span class="token operator">|</span> <span class="token function">less</span>
 <span class="token comment"># your version should look like this:</span>
<span class="token punctuation">..</span>.
  <span class="token string">&quot;engineStrict&quot;</span><span class="token builtin class-name">:</span> true,
  <span class="token string">&quot;engines&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;node&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&gt;=18.18.0&quot;</span>
  <span class="token punctuation">}</span>,
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Switch to the correct (currently: v18.18.0) Node version:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ./frontend
nvm list <span class="token comment"># find out what versions are available for you</span>
nvm <span class="token function">install</span>  v18.18.0 <span class="token comment"># install matching version from package.json</span>
nvm use v18.18.0 <span class="token comment"># switch to that version</span>
nvm <span class="token builtin class-name">alias</span> default v18.18.0 <span class="token comment"># Optional: set the default version</span>
<span class="token function">yarn</span> <span class="token comment"># installs dependencies</span>
<span class="token function">yarn</span> start <span class="token comment"># runs the frontend App</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),I={href:"https://localhost:3000",target:"_blank",rel:"noopener noreferrer"},D=s(`<h3 id="deploy-the-application-after-setup" tabindex="-1"><a class="header-anchor" href="#deploy-the-application-after-setup"><span>Deploy the Application After Setup</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ./backend
<span class="token function">docker</span> compose up <span class="token comment"># starts database container</span>
<span class="token function">npm</span> run start <span class="token comment"># starts API backend</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/frontend
<span class="token function">yarn</span> start <span class="token comment"># starts APP frontend</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><hr><h3 id="appendix-how-to-delete-your-local-database-using-pgadmin" tabindex="-1"><a class="header-anchor" href="#appendix-how-to-delete-your-local-database-using-pgadmin"><span>APPENDIX: How to delete your local database using PGAdmin</span></a></h3><ul><li>make sure the db container is active:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ./backend
<span class="token function">docker</span> <span class="token function">ps</span> <span class="token comment"># If the database container is not running, do:</span>
<span class="token function">docker-compose</span> up db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>In pgAdmin: <ul><li>Navigate to Databases &gt; Schemas &gt; data</li><li>right-click data and select &#39;Delete&#39;</li><li>Right click the GDX Agreements Tracker server &gt; Remove Server</li><li>You will need to re-seed and migrate the database again before you can use it. See: <a href="#seed-the-production-database-and-do-migrations">Seed the production database and do migrations</a></li><li>Use the instructions in <a href="#set-up-pgadmin-to-view-and-make-queries">Set up PGAdmin to view and make queries</a> to import settings again</li></ul></li></ul>`,8);function w(x,R){const a=i("ExternalLinkIcon");return o(),d("div",null,[c,e("ul",null,[e("li",null,[n("Add a "),p,n(" by either creating a new file or using "),e("a",u,[n("sample.env"),t(a)]),n(" as the template")]),v]),m,e("ul",null,[e("li",null,[n("Use the "),b,n(" instructions above to create your .env file, or Create"),h,n(),k,n(" using "),e("a",g,[n("sample.env"),t(a)]),n(" as a template:")])]),f,e("ul",null,[e("li",null,[n("In order to fully seed the database with production data, the "),_,n(" folder needs to contain the *.dat production seeds. "),e("ul",null,[e("li",null,[n("See the "),e("a",S,[n("pmo-mssql-converter README"),t(a)]),n(" on how to generate and copy seeds over. "),y])])]),E]),O,e("ul",null,[A,e("li",null,[n("the "),q,n(", "),N,n(", "),P,n(" will have to be updated according to your "),e("a",T,[n("keycloak server settings"),t(a)])])]),C,e("ul",null,[e("li",null,[n("Your browser should open up at "),e("a",I,[n("localhost:3000"),t(a)])])]),D])}const L=l(r,[["render",w],["__file","deploy_locally.html.vue"]]),M=JSON.parse('{"path":"/guide/GettingStarted/deploy_locally.html","title":"Deploying Using Node and Docker","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Prerequisite","slug":"prerequisite","link":"#prerequisite","children":[]},{"level":2,"title":"Setup Local Repository and certs","slug":"setup-local-repository-and-certs","link":"#setup-local-repository-and-certs","children":[{"level":3,"title":"Download Source Code","slug":"download-source-code","link":"#download-source-code","children":[]},{"level":3,"title":"Setup Certificates","slug":"setup-certificates","link":"#setup-certificates","children":[]}]},{"level":2,"title":"Set up and Deploy Database","slug":"set-up-and-deploy-database","link":"#set-up-and-deploy-database","children":[]},{"level":2,"title":"Set up Back-End API","slug":"set-up-back-end-api","link":"#set-up-back-end-api","children":[{"level":3,"title":"Seed the production database and do migrations","slug":"seed-the-production-database-and-do-migrations","link":"#seed-the-production-database-and-do-migrations","children":[]},{"level":3,"title":"Set up PGAdmin to view and make queries","slug":"set-up-pgadmin-to-view-and-make-queries","link":"#set-up-pgadmin-to-view-and-make-queries","children":[]},{"level":3,"title":"Run the Backend API","slug":"run-the-backend-api","link":"#run-the-backend-api","children":[]}]},{"level":2,"title":"Frontend Setup and Deploy","slug":"frontend-setup-and-deploy","link":"#frontend-setup-and-deploy","children":[{"level":3,"title":"Set up Frontend App","slug":"set-up-frontend-app","link":"#set-up-frontend-app","children":[]},{"level":3,"title":"Deploy the Application After Setup","slug":"deploy-the-application-after-setup","link":"#deploy-the-application-after-setup","children":[]},{"level":3,"title":"APPENDIX: How to delete your local database using PGAdmin","slug":"appendix-how-to-delete-your-local-database-using-pgadmin","link":"#appendix-how-to-delete-your-local-database-using-pgadmin","children":[]}]}],"git":{"contributors":[{"name":"ASpiteri-BCGov","email":"49036255+ASpiteri-BCGov@users.noreply.github.com","commits":1}]},"filePathRelative":"guide/GettingStarted/deploy_locally.md"}');export{L as comp,M as data};
