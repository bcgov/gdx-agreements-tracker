import{_ as e,r as p,o,c,b as n,d as s,e as t,a as i}from"./app-afc8194d.js";const l={},r=n("h1",{id:"grid-item",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#grid-item","aria-hidden":"true"},"#"),s(" Grid Item")],-1),u=n("p",null,[s("The "),n("code",null,"GridItem"),s(" component is a custom React component designed to act as a layout container for child components, specifically Form Inputs; be they Text, Numerical, or Checkboxes. It has no styling of its own, though it uses a "),n("code",null,"Grid"),s(" component to wrap the children that are passed in as props.")],-1),d=n("h3",{id:"props",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#props","aria-hidden":"true"},"#"),s(" Props")],-1),k=n("code",null,"GridItem",-1),m=n("code",null,"Grid",-1),h=n("code",null,"Grid",-1),g={href:"https://mui.com/material-ui/api/grid/",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"GridItem",-1),b=n("code",null,"children",-1),f=n("code",null,"lg",-1),_=i(`<ul><li><code>children</code> (JSX.element): one or more components to be laid out in a grid</li><li><code>width</code> (string): either &quot;half&quot; or &quot;full&quot;, which correspond to 6 and 12 columns, respectively. <ul><li>the xs, sm, and md breakpoints are literally assigned 12 columns</li><li>the lg breakpoint will be set to 6 if <code>width</code> prop is &quot;half&quot;, and 12 if <code>width</code> is &quot;full&quot;.</li></ul></li></ul><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h3><p>In the example below, you can see where the <code>Field</code> is used to pass the <code>children</code> into the container component. each child gets its own set of props, but otherwise this container needs no other properties in order to perform its grid layout task.</p><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> GridItem <span class="token keyword">from</span> <span class="token string">&#39;@mui/material/GridItem&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Field <span class="token keyword">from</span> <span class="token string">&#39;../Field&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">BasicGrid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GridItem</span></span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          // children
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Field</span></span>
            <span class="token attr-name">required</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>required<span class="token punctuation">}</span></span>
            <span class="token attr-name">fullWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">as</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>TextField<span class="token punctuation">}</span></span>
            <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fieldName<span class="token punctuation">}</span></span>
            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">newValue</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token function">handleChange</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">label</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fieldLabel<span class="token punctuation">}</span></span>
            <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fieldName<span class="token punctuation">}</span></span>
            <span class="token attr-name">role</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fieldName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_input</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
            <span class="token attr-name">helperText</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>touched<span class="token punctuation">[</span>fieldName<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> errors<span class="token punctuation">[</span>fieldName<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">error</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>touched<span class="token punctuation">[</span>fieldName<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>errors<span class="token punctuation">[</span>fieldName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">GridItem</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),x={id:"for-a-current-in-use-example-see-components-forms-fields",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#for-a-current-in-use-example-see-components-forms-fields","aria-hidden":"true"},"#",-1),y={href:"https://github.com/bcgov/gdx-agreements-tracker/blob/development/frontend/src/components/Forms/Fields/index.tsx",target:"_blank",rel:"noopener noreferrer"};function I(j,G){const a=p("ExternalLinkIcon");return o(),c("div",null,[r,u,d,n("p",null,[s("The "),k,s(" component wraps its child components in a "),m,s(" component from the Material-UI library, which is a layout component that arranges its child component(s) in a grid. The "),h,s(" component does the actual layout, and takes a "),n("a",g,[s("number of props"),t(a)]),s(", potentially, but in "),v,s(" we only utilize "),b,s(" and the "),f,s(" breakpoint, which determines the number of columns that will be used in the grid layer (either 12 or 6)")]),_,n("h5",x,[w,s(" for a current in-use example, see: "),n("a",y,[s("components/Forms/Fields"),t(a)])])])}const q=e(l,[["render",I],["__file","GridItem.html.vue"]]);export{q as default};
