import{_ as e,r as t,o,c as p,b as n,d as s,e as l,a as i}from"./app-Np8U69EH.js";const c={},r=i(`<h1 id="read-form" tabindex="-1"><a class="header-anchor" href="#read-form"><span>Read Form</span></a></h1><p>The <code>ReadForm</code> component is a React component designed to render a form layout with read-only fields.</p><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><p><code>ReadForm</code> takes a prop named <code>fields</code>, which is an array of field configurations. Each field configuration is an object with the following properties:</p><ul><li><code>width</code> (string): Specifies the width of the field.</li><li><code>title</code> (string): Represents the title or label for the field.</li><li><code>value</code> (IReturnValue): Contains the value to be displayed in the field.</li><li><code>type</code> (optional, string): Indicates the type of the field (e.g., text, number).</li></ul><p>The component then maps over the provided <code>fields</code> array, rendering a <code>ReadField</code> component for each field configuration. The <code>ReadField</code> component is assumed to be another component responsible for displaying a single read-only field based on the provided properties (width, title, value, type).</p><p>Overall, the <code>ReadForm</code> component serves as a reusable and configurable way to present read-only information in a structured form layout.</p><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h3><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ReadForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./ReadForm&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Sample data for the fields</span>
<span class="token keyword">const</span> sampleFields <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&quot;50%&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Name&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&quot;30%&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Age&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&quot;100%&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Address&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;123 Main St, Cityville&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// Note: type is optional and not provided for this field</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// Add more fields as needed</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Example usage of the ReadForm component</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">User Information</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ReadForm</span></span> <span class="token attr-name">fields</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>sampleFields<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),d={id:"for-a-current-in-use-example-see-components-forms-formrenderer",tabindex:"-1"},u={class:"header-anchor",href:"#for-a-current-in-use-example-see-components-forms-formrenderer"},m={href:"https://github.com/bcgov/gdx-agreements-tracker/blob/development/frontend/src/components/Forms/FormRenderer/index.tsx",target:"_blank",rel:"noopener noreferrer"};function k(v,h){const a=t("ExternalLinkIcon");return o(),p("div",null,[r,n("h5",d,[n("a",u,[n("span",null,[s("For a current in-use example, see: "),n("a",m,[s("components/Forms/FormRenderer"),l(a)])])])])])}const b=e(c,[["render",k],["__file","ReadForm.html.vue"]]),f=JSON.parse('{"path":"/guide/Frontend/react_components/Forms/ReadForm.html","title":"Read Form","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"contributors":[{"name":"ASpiteri-BCGov","email":"49036255+ASpiteri-BCGov@users.noreply.github.com","commits":1}]},"filePathRelative":"guide/Frontend/react_components/Forms/ReadForm.md"}');export{b as comp,f as data};
