import{_ as e,r as t,o,c as i,b as a,d as n,e as p,a as c}from"./app-Np8U69EH.js";const l={},u=c(`<h1 id="yup-form-validation" tabindex="-1"><a class="header-anchor" href="#yup-form-validation"><span>Yup Form Validation</span></a></h1><h3 id="adding-validation-schema-to-a-form" tabindex="-1"><a class="header-anchor" href="#adding-validation-schema-to-a-form"><span>Adding Validation Schema to a Form</span></a></h3><p>To add a validation schema to a form section, you need to export a <code>validationSchema</code> object within the <code>FormConfig.ts</code> file. This object will define the validation rules for the fields in that specific form section. Below is an example implementation using the Yup validation library.</p><h3 id="example-implementation" tabindex="-1"><a class="header-anchor" href="#example-implementation"><span>Example Implementation</span></a></h3><p>Assuming you have a <code>FormConfig.ts</code> file, you can follow these steps:</p><ol><li>Import necessary validation methods from Yup at the beginning of your file:</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> object<span class="token punctuation">,</span> <span class="token builtin">number</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;yup&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Create the validationSchema object using Yup&#39;s API. Here&#39;s an example with a field named exampleField:</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> validationSchema <span class="token operator">=</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  exampleField<span class="token operator">:</span> <span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">typeError</span><span class="token punctuation">(</span><span class="token string">&quot;Custom not a number message!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> validationSchema <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, the validationSchema is defining that the exampleField should be a number, and if it&#39;s not, a custom error message will be displayed.</p><p>Here is the whole code:</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> object<span class="token punctuation">,</span> <span class="token builtin">number</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;yup&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> validationSchema <span class="token operator">=</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  exampleField<span class="token operator">:</span> <span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">typeError</span><span class="token punctuation">(</span><span class="token string">&quot;Custom not a number message!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> validationSchema <span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="yup-documentation" tabindex="-1"><a class="header-anchor" href="#yup-documentation"><span>Yup Documentation</span></a></h3>`,13),d={href:"https://github.com/jquense/yup",target:"_blank",rel:"noopener noreferrer"};function r(m,k){const s=t("ExternalLinkIcon");return o(),i("div",null,[u,a("p",null,[n("For more information about Yup and its validation methods, you can refer to the "),a("a",d,[n("Yup documentation"),p(s)]),n(".")])])}const v=e(l,[["render",r],["__file","Validation.html.vue"]]),b=JSON.parse('{"path":"/guide/Frontend/react_components/Forms/Validation.html","title":"Yup Form Validation","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Adding Validation Schema to a Form","slug":"adding-validation-schema-to-a-form","link":"#adding-validation-schema-to-a-form","children":[]},{"level":3,"title":"Example Implementation","slug":"example-implementation","link":"#example-implementation","children":[]},{"level":3,"title":"Yup Documentation","slug":"yup-documentation","link":"#yup-documentation","children":[]}],"git":{"contributors":[{"name":"ASpiteri-BCGov","email":"49036255+ASpiteri-BCGov@users.noreply.github.com","commits":1}]},"filePathRelative":"guide/Frontend/react_components/Forms/Validation.md"}');export{v as comp,b as data};
