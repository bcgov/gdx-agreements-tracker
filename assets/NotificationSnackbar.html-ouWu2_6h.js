import{_ as n,o as a,c as s,a as t}from"./app-cEBkQB-7.js";const e={},o=t(`<h1 id="notification-snackbar" tabindex="-1"><a class="header-anchor" href="#notification-snackbar"><span>Notification Snackbar</span></a></h1><p>The <code>NotificationSnackBar</code> component is a React component that displays a snackbar with an alert message and a color based on the severity. It utilizes the Material-UI (MUI) library for styling and includes features such as auto-hide duration, on-close callback, and responsive width.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>The <code>NotificationSnackBar</code> component is designed to display a snackbar with an alert message and a color based on the severity. It takes the following props:</p><ul><li><code>snackbarMessage</code>: A string representing the message to display in the alert.</li><li><code>snackbarOpen</code>: A boolean indicating whether the snackbar is open or not.</li><li><code>snackbarType</code>: A string representing the severity of the alert, which can be one of <code>&quot;error&quot;</code>, <code>&quot;warning&quot;</code>, <code>&quot;info&quot;</code>, or <code>&quot;success&quot;</code>.</li><li><code>handleSnackbar</code>: A function that takes a boolean parameter and handles the snackbar open state.</li></ul><h2 id="styling" tabindex="-1"><a class="header-anchor" href="#styling"><span>Styling</span></a></h2><p>The <code>NotificationSnackBar</code> component utilizes Material-UI <code>Snackbar</code>, <code>Alert</code>, and <code>sx</code> components for its structure and styling. It has the following styling specifications:</p><ul><li>Snackbar: Auto-hide duration of 2000 milliseconds, and on-close callback that calls the <code>handleSnackbar</code> function with <code>false</code> as the argument.</li><li>Alert: Filled variant, severity based on the <code>snackbarType</code> prop, and width of 100%.</li></ul><h2 id="default-behavior" tabindex="-1"><a class="header-anchor" href="#default-behavior"><span>Default Behavior</span></a></h2><p>The <code>NotificationSnackBar</code> component renders a snackbar with an alert message and a color based on the severity, and hides itself after 2000 milliseconds or when the user clicks on the close icon.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NotificationSnackBar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./NotificationSnackBar&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Import the NotificationSnackBar component</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>snackbarOpen<span class="token punctuation">,</span> setSnackbarOpen<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// State for snackbar open</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>snackbarMessage<span class="token punctuation">,</span> setSnackbarMessage<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// State for snackbar message</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>snackbarType<span class="token punctuation">,</span> setSnackbarType<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// State for snackbar type</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSnackbar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setSnackbarOpen</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set the snackbar open state</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setSnackbarMessage</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set the snackbar message</span>
    <span class="token function">setSnackbarType</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set the snackbar type</span>
    <span class="token function">setSnackbarOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Open the snackbar</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Show Snackbar</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NotificationSnackBar</span></span>
        <span class="token attr-name">snackbarMessage</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>snackbarMessage<span class="token punctuation">}</span></span>
        <span class="token attr-name">snackbarOpen</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>snackbarOpen<span class="token punctuation">}</span></span>
        <span class="token attr-name">snackbarType</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>snackbarType<span class="token punctuation">}</span></span>
        <span class="token attr-name">handleSnackbar</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSnackbar<span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),c=[o];function p(i,l){return a(),s("div",null,c)}const r=n(e,[["render",p],["__file","NotificationSnackbar.html.vue"]]),k=JSON.parse('{"path":"/guide/Frontend/react_components/NotificationSnackbar.html","title":"Notification Snackbar","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Styling","slug":"styling","link":"#styling","children":[]},{"level":2,"title":"Default Behavior","slug":"default-behavior","link":"#default-behavior","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"contributors":[{"name":"ASpiteri-BCGov","email":"49036255+ASpiteri-BCGov@users.noreply.github.com","commits":1}]},"filePathRelative":"guide/Frontend/react_components/NotificationSnackbar.md"}');export{r as comp,k as data};
