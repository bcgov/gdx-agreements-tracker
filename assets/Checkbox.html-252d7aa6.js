import{_ as e,r as t,o as p,c as o,b as n,d as s,e as c,a as i}from"./app-efef440b.js";const l={},u=i(`<h1 id="checkbox" tabindex="-1"><a class="header-anchor" href="#checkbox" aria-hidden="true">#</a> Checkbox</h1><p>The <code>Checkbox</code> component is a custom React component designed to act as a standard checkbox with enhanced validation and look &amp; feel from the Formik and MUI libraries, respectively. It utilizes the Material-UI (MUI) Checkbox component for styling and interaction.</p><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h3><ol><li><p><code>Create a checkbox input</code>: The Checkbox component is a custom React component that renders a checkbox input with a label. It is imported from ./Checkbox and used inside a Formik form.</p></li><li><p><code>Handle user selection</code>: The Checkbox component allows users to check or uncheck the option represented by the checkbox. The name prop is used to bind the checkbox value to the Formik values object. The label prop is used to display the text next to the checkbox.</p></li><li><p><code>Validate user input</code> The Checkbox component also handles the validation and error messages for the checkbox input. It uses the Yup schema validation library to define the validation rules and display the error messages.</p></li></ol><p>The Checkbox component takes the following props:</p><ul><li><code>checked</code>: tells the checkbox whether it should display checked or not on each render</li><li><code>fieldName</code>: this references the field whose value the checkbox controls</li><li><code>setFieldValue</code>: controls the referenced Field using <code>fieldname</code> and <code>event.target.checked</code></li><li><code>helperText</code>: this holds a custom error to display to the user below the checkbox</li><li><code>error</code>: if error === true, then display the <code>helperText</code> message in red</li></ul><h3 id="styling" tabindex="-1"><a class="header-anchor" href="#styling" aria-hidden="true">#</a> Styling</h3><p>The <code>Checkbox</code> custom component wraps the Material-UI Checkbox component and applies custom styling to the helperText using Material UI classes.</p><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Formik<span class="token punctuation">,</span> Form <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;formik&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Checkbox <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./Checkbox&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Formik</span></span>
      <span class="token attr-name">initialValues</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">agree</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        errors<span class="token punctuation">,</span> <span class="token comment">// error list, organized by fieldName</span>
        checked<span class="token punctuation">,</span>
        <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        fieldName<span class="token punctuation">,</span>
        setFieldValue<span class="token punctuation">,</span>
        helperText<span class="token punctuation">,</span>
        touched<span class="token punctuation">,</span> <span class="token comment">// tracks whether the checkbox was clicked yet</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Checkbox</span></span>
            <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fieldValue <span class="token keyword">as</span> boolean<span class="token punctuation">}</span></span>
            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange <span class="token keyword">as</span> Function<span class="token punctuation">}</span></span>
            <span class="token attr-name">fieldName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fieldName<span class="token punctuation">}</span></span>
            <span class="token attr-name">setFieldValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setFieldValue <span class="token keyword">as</span> Function<span class="token punctuation">}</span></span>
            <span class="token attr-name">helperText</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>touched<span class="token punctuation">[</span>fieldName<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> errors<span class="token punctuation">[</span>fieldName<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">error</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>touched<span class="token punctuation">[</span>fieldName<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>errors<span class="token punctuation">[</span>fieldName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Formik</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),r={id:"for-a-current-in-use-example-see-components-forms-forminput",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#for-a-current-in-use-example-see-components-forms-forminput","aria-hidden":"true"},"#",-1),k={href:"https://github.com/bcgov/gdx-agreements-tracker/blob/development/frontend/src/components/Forms/FormInput/index.tsx",target:"_blank",rel:"noopener noreferrer"};function m(h,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[u,n("h5",r,[d,s(" for a current in-use example, see: "),n("a",k,[s("components/Forms/FormInput"),c(a)])])])}const g=e(l,[["render",m],["__file","Checkbox.html.vue"]]);export{g as default};
