import{_ as n,o as s,c as a,a as e}from"./app-4xGmQtUK.js";const t={},o=e(`<h1 id="form-input" tabindex="-1"><a class="header-anchor" href="#form-input"><span>Form Input</span></a></h1><p>The <code>FormInput</code> component in React is designed to handle the rendering of various form input fields with different types, such as text fields, date pickers, money fields, and more. It utilizes Material-UI components and integrates with Formik for form management.</p><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><ol><li><p><strong>Component Props</strong>:</p><ul><li><code>errors</code>: Object containing form field errors.</li><li><code>setFieldValue</code>: Function to set the form field value.</li><li><code>fieldValue</code>: Current value of the form field.</li><li><code>fieldName</code>: Unique identifier for the form field.</li><li><code>fieldType</code>: Type of the form field (e.g., &quot;money&quot;, &quot;date&quot;, &quot;select&quot;).</li><li><code>fieldLabel</code>: Label for the form field.</li><li><code>handleChange</code>: Function to handle changes in the form field.</li><li><code>width</code>: Width of the form field within the grid layout.</li><li><code>pickerName</code>: Name of the picker (for date pickers).</li><li><code>tableName</code>: Name of the table (for picker options).</li><li><code>projectId</code>: Identifier for the project (for picker options).</li><li><code>contractId</code>: Identifier for the contract (for picker options).</li><li><code>required</code>: Boolean indicating if the form field is required (default: <code>false</code>).</li><li><code>touched</code>: Object containing information about touched form fields.</li><li><code>autocompleteTableColumns</code>: Columns configuration for the AutocompleteTable field.</li><li><code>customOnChange</code>: Function for custom handling of field changes.</li><li><code>generateValueButton</code>: Configuration for a button that generates a field value dynamically.</li></ul></li><li><p><strong>Field Types</strong>:</p><ul><li><strong>Money Field</strong> (<code>fieldType: &quot;money&quot;</code>): A field for handling monetary values.</li><li><strong>Date Picker</strong> (<code>fieldType: &quot;date&quot;</code>): A field for selecting dates.</li><li><strong>Single Text Field</strong> (<code>fieldType: &quot;singleText&quot;</code>): A single-line text input field.</li><li><strong>Multi-Text Field</strong> (<code>fieldType: &quot;multiText&quot;</code>): A multi-line text input field.</li><li><strong>Select Field</strong> (<code>fieldType: &quot;select&quot;</code>): A dropdown/select field.</li><li><strong>Autocomplete Table Field</strong> (<code>fieldType: &quot;autocompleteTable&quot;</code>): A field with autocomplete suggestions from a table.</li><li><strong>Number Field</strong> (<code>fieldType: &quot;number&quot;</code>): A numeric input field.</li><li><strong>Checkbox Field</strong> (<code>fieldType: &quot;checkbox&quot;</code>): A checkbox input field.</li><li><strong>Readonly Field</strong> (<code>fieldType: &quot;readonly&quot;</code>): A read-only field.</li></ul></li><li><p><strong>Integration</strong>:</p><ul><li>The component integrates with Formik for form state management.</li><li>Material-UI components such as <code>TextField</code>, <code>DatePicker</code>, and <code>Button</code> are used for rendering.</li></ul></li><li><p><strong>Example</strong></p></li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FormInput <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./FormInput&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Adjust the import path based on your project structure</span>

<span class="token keyword">const</span> <span class="token function-variable function">ExampleForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleFieldChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Custom logic for handling field changes</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* Example usage of FormInput for a money field */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInput</span></span>
        <span class="token attr-name">errors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token comment">/* ... */</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">setFieldValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token comment">/* ... */</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">fieldValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token comment">/* ... */</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">fieldName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>exampleMoneyField<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">fieldType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>money<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">fieldLabel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Money Field<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">handleChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleFieldChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">required</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      
      </span><span class="token punctuation">{</span><span class="token comment">/* Other FormInput usage for different field types */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* ... */</span><span class="token punctuation">}</span><span class="token plain-text">

    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> ExampleForm<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),i=[o];function l(p,c){return s(),a("div",null,i)}const r=n(t,[["render",l],["__file","FormInput.html.vue"]]),d=JSON.parse('{"path":"/guide/Frontend/react_components/Forms/Fields/FormInput.html","title":"Form Input","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"git":{"contributors":[{"name":"ASpiteri-BCGov","email":"49036255+ASpiteri-BCGov@users.noreply.github.com","commits":1}]},"filePathRelative":"guide/Frontend/react_components/Forms/Fields/FormInput.md"}');export{r as comp,d as data};
